{"ast":null,"code":"//JobsList.js\nimport React,{useState,useEffect}from'react';import{deleteJob}from'./utils/jobs_list/DeleteJob.js';import Portal from'./StatusDropdownPortal.js';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const JobsList=_ref=>{let{removeJobCallBack,jobsState}=_ref;const[openDropdownId,setOpenDropdownId]=useState(null);const[dropdownCoords,setDropdownCoords]=useState({top:0,left:0});const toggleDropdown=(e,jobId)=>{e.stopPropagation();const rect=e.currentTarget.getBoundingClientRect();console.log('dropdown coords:',rect.bottom,rect.left);// Close if clicking the same dropdown\nif(openDropdownId===jobId){setOpenDropdownId(null);return;}setDropdownCoords({top:rect.bottom,left:rect.left});setOpenDropdownId(jobId);};useEffect(()=>{const handleClickOutside=()=>{setOpenDropdownId(null);};window.addEventListener('click',handleClickOutside);return()=>window.removeEventListener('click',handleClickOutside);},[]);const handleDeleteJob=(e,jobId,jobCompany,jobTitle)=>{e.preventDefault();deleteJob(jobId,jobCompany,jobTitle);//Delete job from the database\nremoveJobCallBack(jobId);//RemoveJob from the jobs state\n};const countJobStatus=()=>{const appliedCount=jobsState.filter(job=>job.status==='Applied').length;const rejectedCount=jobsState.filter(job=>job.status==='Rejected').length;const interviewCount=jobsState.filter(job=>job.status==='Interview').length;const statusCount={applied:appliedCount,rejected:rejectedCount,interview:interviewCount};return statusCount;};return/*#__PURE__*/_jsx(\"div\",{className:\"box p-0\",style:{marginTop:'20px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"table-container jobs-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table is-fullwidth is-striped is-hoverable\",children:[/*#__PURE__*/_jsxs(\"thead\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"has-text-centered\",children:/*#__PURE__*/_jsxs(\"th\",{colSpan:\"7\",className:\"has-text-centered\",children:[\"Applied Jobs: \",countJobStatus().applied]})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:'15%'},children:\"Company\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'15%'},children:\"Position\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'10%'},children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'10%'},children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'20%'},children:\"Location\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'10%'},children:\"URL\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'20%'},children:\"Actions\"})]})]}),/*#__PURE__*/_jsx(\"tbody\",{children:jobsState.map(job=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:job.company}),/*#__PURE__*/_jsx(\"td\",{children:job.position}),/*#__PURE__*/_jsx(\"td\",{className:\"jobs-table-narrow-column\",children:job.date}),/*#__PURE__*/_jsxs(\"td\",{className:\"jobs-table-narrow-column\",children:[\" \",/*#__PURE__*/_jsxs(\"span\",{className:`tag ${job.status}`,children:[\" \",job.status,\" \"]}),\" \"]}),/*#__PURE__*/_jsx(\"td\",{children:job.location}),/*#__PURE__*/_jsxs(\"td\",{className:\"jobs-table-narrow-column\",children:[\" \",/*#__PURE__*/_jsx(\"a\",{href:job.url,target:\"_blank\",rel:\"noopener noreferrer\",children:\"link\"}),\" \"]}),\" \",/*#__PURE__*/_jsxs(\"td\",{className:\"jobs-actions\",style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:e=>toggleDropdown(e,job.id),children:\" Actions \\u25BC \"}),openDropdownId===job.id&&/*#__PURE__*/_jsx(Portal,{children:/*#__PURE__*/_jsx(\"div\",{className:\"portal-test-box\",children:\"Test Portal Content\"})})]})]},job.id))})]})})});};export default JobsList;","map":{"version":3,"names":["React","useState","useEffect","deleteJob","Portal","jsxs","_jsxs","jsx","_jsx","JobsList","_ref","removeJobCallBack","jobsState","openDropdownId","setOpenDropdownId","dropdownCoords","setDropdownCoords","top","left","toggleDropdown","e","jobId","stopPropagation","rect","currentTarget","getBoundingClientRect","console","log","bottom","handleClickOutside","window","addEventListener","removeEventListener","handleDeleteJob","jobCompany","jobTitle","preventDefault","countJobStatus","appliedCount","filter","job","status","length","rejectedCount","interviewCount","statusCount","applied","rejected","interview","className","style","marginTop","children","colSpan","width","map","company","position","date","location","href","url","target","rel","onClick","id"],"sources":["/home/ayoo1131/guitar_note_to_tabs/my_app/dashboard/applications/applied_jobs/frontend/src/components/body/JobsList.js"],"sourcesContent":["//JobsList.js\nimport React, { useState, useEffect } from 'react';\nimport { deleteJob } from './utils/jobs_list/DeleteJob.js'\nimport Portal from './StatusDropdownPortal.js';\n\nconst JobsList = ({ removeJobCallBack, jobsState }) => {\n        const [openDropdownId, setOpenDropdownId] = useState(null);\n        const [dropdownCoords, setDropdownCoords] = useState({top: 0, left: 0});\n\n        const toggleDropdown = (e, jobId) => {\n                e.stopPropagation();\n                const rect = e.currentTarget.getBoundingClientRect();\n                console.log('dropdown coords:', rect.bottom, rect.left);\n                // Close if clicking the same dropdown\n                if (openDropdownId === jobId) {\n                        setOpenDropdownId(null);\n                        return;\n                }\n\n                setDropdownCoords({ top: rect.bottom, left: rect.left });\n                setOpenDropdownId(jobId);\n        };\n\n        useEffect(() => {\n                const handleClickOutside =()=>{\n                        setOpenDropdownId(null);\n                };\n\n                window.addEventListener('click', handleClickOutside);\n                return () => window.removeEventListener('click', handleClickOutside);\n\n        }, []);\n\n        const handleDeleteJob = (e, jobId, jobCompany, jobTitle) => {\n                e.preventDefault();\n                deleteJob(jobId, jobCompany, jobTitle); //Delete job from the database\n                removeJobCallBack(jobId); //RemoveJob from the jobs state\n        };\n\n        const countJobStatus = () => {\n                const appliedCount = jobsState.filter(job => job.status === 'Applied').length;\n                const rejectedCount = jobsState.filter(job => job.status === 'Rejected').length;\n                const interviewCount = jobsState.filter(job => job.status === 'Interview').length;\n\n                const statusCount = {\n                        applied: appliedCount,\n                        rejected: rejectedCount,\n                        interview: interviewCount\n                };\n\n                return statusCount\n        };\n\n\n\n\n\n        return (\n                <div className=\"box p-0\" style={{ marginTop: '20px' }}>\n                        <div className=\"table-container jobs-table-container\">\n                                <table className=\"table is-fullwidth is-striped is-hoverable\">\n                                        <thead>\n                                                <tr className='has-text-centered'>\n                                                        <th colSpan=\"7\" className=\"has-text-centered\">Applied Jobs: {countJobStatus().applied}</th>\n                                                </tr>\n\n\n                                                <tr>\n                                                        <th style={{ width: '15%' }} >Company</th>\n                                                        <th style={{ width: '15%' }} >Position</th>\n                                                        <th style={{ width: '10%' }} >Date</th>\n                                                        <th style={{ width: '10%' }} >Status</th>\n                                                        <th style={{ width: '20%' }} >Location</th>\n                                                        <th style={{ width: '10%' }} >URL</th>\n                                                        <th style={{ width: '20%' }} >Actions</th>\n                                                </tr>\n                                        </thead>\n\n                                        <tbody>\n                                                {jobsState.map(job => (\n\n                                                        <tr key={job.id}>\n                                                                <td>{job.company}</td>\n                                                                <td>{job.position}</td>\n                                                                <td className='jobs-table-narrow-column'>{job.date}</td>\n                                                                <td className='jobs-table-narrow-column'> <span className={`tag ${job.status}`}> {job.status} </span> </td>\n                                                                <td>{job.location}</td>\n                                                                <td className='jobs-table-narrow-column'> <a href={job.url} target='_blank' rel='noopener noreferrer' >link</a> </td> {/*target='_blank' opens link in new tab rel is for security*/}\n\n                                                                <td className=\"jobs-actions\" style={{ position: 'relative' }}>\n                                                                        <button className=\"button\" onClick={(e) => toggleDropdown(e, job.id)}> Actions â–¼ </button>\n\n                                                                        {openDropdownId === job.id && (\n                                                                                <Portal>\n  \t\t\t\t\t\t\t\t\t\t\t<div className=\"portal-test-box\">Test Portal Content</div>\n\t\t\t\t\t\t\t\t\t\t</Portal>\n                                                                        )}\n                                                                </td>\n\n                                                        </tr>\n                                                ))}\n                                        </tbody>\n                                </table>\n                        </div>\n                </div>\n        );\n};\n\nexport default JobsList;\n\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,gCAAgC,CAC1D,MAAO,CAAAC,MAAM,KAAM,2BAA2B,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAsC,IAArC,CAAEC,iBAAiB,CAAEC,SAAU,CAAC,CAAAF,IAAA,CAC1C,KAAM,CAACG,cAAc,CAAEC,iBAAiB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACc,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,CAACgB,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAC,CAAC,CAEvE,KAAM,CAAAC,cAAc,CAAGA,CAACC,CAAC,CAAEC,KAAK,GAAK,CAC7BD,CAAC,CAACE,eAAe,CAAC,CAAC,CACnB,KAAM,CAAAC,IAAI,CAAGH,CAAC,CAACI,aAAa,CAACC,qBAAqB,CAAC,CAAC,CACpDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEJ,IAAI,CAACK,MAAM,CAAEL,IAAI,CAACL,IAAI,CAAC,CACvD;AACA,GAAIL,cAAc,GAAKQ,KAAK,CAAE,CACtBP,iBAAiB,CAAC,IAAI,CAAC,CACvB,OACR,CAEAE,iBAAiB,CAAC,CAAEC,GAAG,CAAEM,IAAI,CAACK,MAAM,CAAEV,IAAI,CAAEK,IAAI,CAACL,IAAK,CAAC,CAAC,CACxDJ,iBAAiB,CAACO,KAAK,CAAC,CAChC,CAAC,CAEDnB,SAAS,CAAC,IAAM,CACR,KAAM,CAAA2B,kBAAkB,CAAEA,CAAA,GAAI,CACtBf,iBAAiB,CAAC,IAAI,CAAC,CAC/B,CAAC,CAEDgB,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAEF,kBAAkB,CAAC,CACpD,MAAO,IAAMC,MAAM,CAACE,mBAAmB,CAAC,OAAO,CAAEH,kBAAkB,CAAC,CAE5E,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,eAAe,CAAGA,CAACb,CAAC,CAAEC,KAAK,CAAEa,UAAU,CAAEC,QAAQ,GAAK,CACpDf,CAAC,CAACgB,cAAc,CAAC,CAAC,CAClBjC,SAAS,CAACkB,KAAK,CAAEa,UAAU,CAAEC,QAAQ,CAAC,CAAE;AACxCxB,iBAAiB,CAACU,KAAK,CAAC,CAAE;AAClC,CAAC,CAED,KAAM,CAAAgB,cAAc,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,YAAY,CAAG1B,SAAS,CAAC2B,MAAM,CAACC,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAK,SAAS,CAAC,CAACC,MAAM,CAC7E,KAAM,CAAAC,aAAa,CAAG/B,SAAS,CAAC2B,MAAM,CAACC,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAK,UAAU,CAAC,CAACC,MAAM,CAC/E,KAAM,CAAAE,cAAc,CAAGhC,SAAS,CAAC2B,MAAM,CAACC,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAK,WAAW,CAAC,CAACC,MAAM,CAEjF,KAAM,CAAAG,WAAW,CAAG,CACZC,OAAO,CAAER,YAAY,CACrBS,QAAQ,CAAEJ,aAAa,CACvBK,SAAS,CAAEJ,cACnB,CAAC,CAED,MAAO,CAAAC,WAAW,CAC1B,CAAC,CAMD,mBACQrC,IAAA,QAAKyC,SAAS,CAAC,SAAS,CAACC,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAC,QAAA,cAC9C5C,IAAA,QAAKyC,SAAS,CAAC,sCAAsC,CAAAG,QAAA,cAC7C9C,KAAA,UAAO2C,SAAS,CAAC,4CAA4C,CAAAG,QAAA,eACrD9C,KAAA,UAAA8C,QAAA,eACQ5C,IAAA,OAAIyC,SAAS,CAAC,mBAAmB,CAAAG,QAAA,cACzB9C,KAAA,OAAI+C,OAAO,CAAC,GAAG,CAACJ,SAAS,CAAC,mBAAmB,CAAAG,QAAA,EAAC,gBAAc,CAACf,cAAc,CAAC,CAAC,CAACS,OAAO,EAAK,CAAC,CAC/F,CAAC,cAGLxC,KAAA,OAAA8C,QAAA,eACQ5C,IAAA,OAAI0C,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAE,SAAO,CAAI,CAAC,cAC1C5C,IAAA,OAAI0C,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAE,UAAQ,CAAI,CAAC,cAC3C5C,IAAA,OAAI0C,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAE,MAAI,CAAI,CAAC,cACvC5C,IAAA,OAAI0C,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAE,QAAM,CAAI,CAAC,cACzC5C,IAAA,OAAI0C,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAE,UAAQ,CAAI,CAAC,cAC3C5C,IAAA,OAAI0C,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAE,KAAG,CAAI,CAAC,cACtC5C,IAAA,OAAI0C,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAE,SAAO,CAAI,CAAC,EAC9C,CAAC,EACN,CAAC,cAER5C,IAAA,UAAA4C,QAAA,CACSxC,SAAS,CAAC2C,GAAG,CAACf,GAAG,eAEVlC,KAAA,OAAA8C,QAAA,eACQ5C,IAAA,OAAA4C,QAAA,CAAKZ,GAAG,CAACgB,OAAO,CAAK,CAAC,cACtBhD,IAAA,OAAA4C,QAAA,CAAKZ,GAAG,CAACiB,QAAQ,CAAK,CAAC,cACvBjD,IAAA,OAAIyC,SAAS,CAAC,0BAA0B,CAAAG,QAAA,CAAEZ,GAAG,CAACkB,IAAI,CAAK,CAAC,cACxDpD,KAAA,OAAI2C,SAAS,CAAC,0BAA0B,CAAAG,QAAA,EAAC,GAAC,cAAA9C,KAAA,SAAM2C,SAAS,CAAE,OAAOT,GAAG,CAACC,MAAM,EAAG,CAAAW,QAAA,EAAC,GAAC,CAACZ,GAAG,CAACC,MAAM,CAAC,GAAC,EAAM,CAAC,IAAC,EAAI,CAAC,cAC3GjC,IAAA,OAAA4C,QAAA,CAAKZ,GAAG,CAACmB,QAAQ,CAAK,CAAC,cACvBrD,KAAA,OAAI2C,SAAS,CAAC,0BAA0B,CAAAG,QAAA,EAAC,GAAC,cAAA5C,IAAA,MAAGoD,IAAI,CAAEpB,GAAG,CAACqB,GAAI,CAACC,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,qBAAqB,CAAAX,QAAA,CAAE,MAAI,CAAG,CAAC,IAAC,EAAI,CAAC,IAAC,cAEtH9C,KAAA,OAAI2C,SAAS,CAAC,cAAc,CAACC,KAAK,CAAE,CAAEO,QAAQ,CAAE,UAAW,CAAE,CAAAL,QAAA,eACrD5C,IAAA,WAAQyC,SAAS,CAAC,QAAQ,CAACe,OAAO,CAAG5C,CAAC,EAAKD,cAAc,CAACC,CAAC,CAAEoB,GAAG,CAACyB,EAAE,CAAE,CAAAb,QAAA,CAAC,kBAAW,CAAQ,CAAC,CAEzFvC,cAAc,GAAK2B,GAAG,CAACyB,EAAE,eAClBzD,IAAA,CAACJ,MAAM,EAAAgD,QAAA,cAC1E5C,IAAA,QAAKyC,SAAS,CAAC,iBAAiB,CAAAG,QAAA,CAAC,qBAAmB,CAAK,CAAC,CACrD,CACuD,EACL,CAAC,GAhBJZ,GAAG,CAACyB,EAkBT,CACX,CAAC,CACH,CAAC,EACT,CAAC,CACX,CAAC,CACT,CAAC,CAEtB,CAAC,CAED,cAAe,CAAAxD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}