{"ast":null,"code":"//UserContext.js - Use this context to share values between components without explicitly passing values between components\nimport React,{createContext,useState,useEffect}from'react';// Create the context object\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const UserContext=/*#__PURE__*/createContext(null);// Create a provider component that wraps your app\nexport const UserProvider=_ref=>{let{children}=_ref;const[username,setUsername]=useState(null);// Fetch the username from your Flask API when the app loads\nuseEffect(()=>{fetch('/api/user-info',{method:'GET',credentials:'include',// Send cookies with request (important for Flask sessions)\nheaders:{'Content-Type':'application/json'}}).then(res=>{if(!res.ok)throw new Error('Not logged in');return res.json();}).then(data=>{setUsername(data.username);// Save the username in state\n}).catch(()=>{setUsername(null);// Clear username if there's an error\n});},[]);return/*#__PURE__*/_jsx(UserContext.Provider,{value:{username},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","UserContext","UserProvider","_ref","children","username","setUsername","fetch","method","credentials","headers","then","res","ok","Error","json","data","catch","Provider","value"],"sources":["/home/ayoo1131/guitar_note_to_tabs/my_app/dashboard/applications/applied_jobs/frontend/src/context/UserContext.js"],"sourcesContent":["//UserContext.js - Use this context to share values between components without explicitly passing values between components\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the context object\nexport const UserContext = createContext(null);\n\n// Create a provider component that wraps your app\nexport const UserProvider = ({ children }) => {\n  const [username, setUsername] = useState(null);\n\n  // Fetch the username from your Flask API when the app loads\n  useEffect(() => {\n    fetch('/api/user-info', {\n      method: 'GET',\n      credentials: 'include', // Send cookies with request (important for Flask sessions)\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error('Not logged in');\n        return res.json();\n      })\n      .then((data) => {\n        setUsername(data.username); // Save the username in state\n      })\n      .catch(() => {\n        setUsername(null); // Clear username if there's an error\n      });\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ username }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAEjE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,IAAI,CAAC,CAE9C;AACA,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAE9C;AACAC,SAAS,CAAC,IAAM,CACdS,KAAK,CAAC,gBAAgB,CAAE,CACtBC,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SAAS,CAAE;AACxBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,EAAK,CACb,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,eAAe,CAAC,CAC7C,MAAO,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,EAAK,CACdV,WAAW,CAACU,IAAI,CAACX,QAAQ,CAAC,CAAE;AAC9B,CAAC,CAAC,CACDY,KAAK,CAAC,IAAM,CACXX,WAAW,CAAC,IAAI,CAAC,CAAE;AACrB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEN,IAAA,CAACC,WAAW,CAACiB,QAAQ,EAACC,KAAK,CAAE,CAAEd,QAAS,CAAE,CAAAD,QAAA,CACvCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}