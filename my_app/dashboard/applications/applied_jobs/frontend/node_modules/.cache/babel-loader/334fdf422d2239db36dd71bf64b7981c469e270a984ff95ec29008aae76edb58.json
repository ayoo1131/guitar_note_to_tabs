{"ast":null,"code":"//GetJobs.js\nexport async function getJobs(userId){try{const response=await fetch('/api/get-jobs',{method:'GET',headers:{'Content-Type':'application/json'},credentials:'include'// Sends Flask session cookie\n});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const data=await response.json();return Array.isArray(data)?data:[];// Ensure always return an array\n}catch(error){console.error('Fetch error:',error);return[];// Return empty array on failure\n}};","map":{"version":3,"names":["getJobs","userId","response","fetch","method","headers","credentials","ok","Error","status","data","json","Array","isArray","error","console"],"sources":["/home/ayoo1131/guitar_note_to_tabs/my_app/dashboard/applications/applied_jobs/src/components/body/utils/jobs_list/GetJobs.js"],"sourcesContent":["//GetJobs.js\n\nexport async function getJobs( userId ){\n\ttry {\n    \t\tconst response = await fetch('/api/get-jobs', {\n      \t\t\tmethod: 'GET',\n      \t\t\theaders: { 'Content-Type': 'application/json' },\n      \t\t\tcredentials: 'include'  // Sends Flask session cookie\n    \t\t});\n\n    \t\tif (!response.ok) {\n     \t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n    \t\t}\n\n    \t\tconst data = await response.json();\n    \t\t\treturn Array.isArray(data) ? data : []; // Ensure always return an array\n  \t}\n\t\n\tcatch (error) {\n    \t\tconsole.error('Fetch error:', error);\n    \t\treturn []; // Return empty array on failure\n\t}\n};\n"],"mappings":"AAAA;AAEA,MAAO,eAAe,CAAAA,OAAOA,CAAEC,MAAM,CAAE,CACtC,GAAI,CACC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,eAAe,CAAE,CAC3CC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,WAAW,CAAE,SAAW;AAC3B,CAAC,CAAC,CAEF,GAAI,CAACJ,QAAQ,CAACK,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC,CAC3D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACjC,MAAO,CAAAC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,CAAGA,IAAI,CAAG,EAAE,CAAE;AAC5C,CAEF,MAAOI,KAAK,CAAE,CACTC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,MAAO,EAAE,CAAE;AAChB,CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}